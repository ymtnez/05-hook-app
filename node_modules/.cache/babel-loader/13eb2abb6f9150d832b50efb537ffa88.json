{"ast":null,"code":"/** * \r\n * Puede definirse asi tambien, aunque la podemos simplificar mas pues getImagenPromesa\r\n * solo tiene un return por lo que podemos convertirla en una funcion con return implicito \r\n    const getImagenPromesa = () => {\r\n        const promesa = new Promise( (resolve, reject) => {\r\n            resolve('https://jdfsdfjsdlfjd.com');\r\n        })\r\n        \r\n        return promesa;\r\n    }\r\n*/\nconst getImagenPromesa = () => new Promise((resolve, reject) => {\n  resolve('https://lolo.papo.com');\n}); //Puede ser asi tambien\n// getImagenPromesa().then(url => console.log('Esta es la url:', url));\n\n\ngetImagenPromesa().then(console.log);","map":{"version":3,"names":["getImagenPromesa","Promise","resolve","reject","then","console","log"],"sources":["/media/ymtnez/AdminFile/Personal/Desarrollo/Ejemplos/react/02-intro-javascript/src/index.js"],"sourcesContent":["/** * \r\n * Puede definirse asi tambien, aunque la podemos simplificar mas pues getImagenPromesa\r\n * solo tiene un return por lo que podemos convertirla en una funcion con return implicito \r\n    const getImagenPromesa = () => {\r\n        const promesa = new Promise( (resolve, reject) => {\r\n            resolve('https://jdfsdfjsdlfjd.com');\r\n        })\r\n        \r\n        return promesa;\r\n    }\r\n*/\r\nconst getImagenPromesa = () => new Promise( (resolve, reject) => {\r\n        resolve('https://lolo.papo.com');\r\n    })\r\n\r\n\r\n\r\n\r\n//Puede ser asi tambien\r\n// getImagenPromesa().then(url => console.log('Esta es la url:', url));\r\ngetImagenPromesa().then(console.log);"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAG,MAAM,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;EACzDD,OAAO,CAAC,uBAAD,CAAP;AACH,CAF0B,CAA/B,C,CAOA;AACA;;;AACAF,gBAAgB,GAAGI,IAAnB,CAAwBC,OAAO,CAACC,GAAhC"},"metadata":{},"sourceType":"module"}